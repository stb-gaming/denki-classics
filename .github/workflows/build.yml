name: Build and Release Electron Application

on:
  push:
    branches:
      - master
      - develop
      - feature/design

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            buildScript: buildWindows
            releaseFileExtension: .exe
          - os: ubuntu-latest
            buildScript: buildLinux
            releaseFileExtension: .AppImage
          - os: macos-latest
            buildScript: buildMac
            releaseFileExtension: .pkg

    steps:

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm ci

      - name: Get package version
        id: version
        run: echo ::set-output name=version::$(node -p "require('./package.json').version")

      - name: Build Electron application
        run: npm run ${{ matrix.buildScript }}

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Create pre-release
        #if: startsWith(github.ref, 'refs/heads/develop')
		if: startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/feature/design/')
        id: create_prerelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Pre-release ${{ github.sha }}
          body: |
            Pre-release ${{ github.sha }}
          draft: false
          prerelease: true

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/denki-classics-${{ steps.version.outputs.version }}${{ matrix.releaseFileExtension }}
          asset_name: denki-classics-${{ steps.version.outputs.version }}${{ matrix.releaseFileExtension }}
          asset_content_type: application/octet-stream
